//コライダクラスのインクルード
#include"CCollider.h"
//コリジョンマネージャクラスのインクルード
#include"CCollisionManager.h"

CCollider::CCollider(CCharacter* parent, CMatrix* matrix,
	const CVector& position, float radius) {
	//親設定
	mpParent = parent;
	//親行列設定
	mpMatrix = matrix;
	//CTransform設定
	mPosition = position; //位置
	//半径設定
	mRadius = radius;
	//コリジョンマネージャyに追加
	CCollisionManager::Get()->Add(this);
}

CCharacter* CCollider::Parent() 
{
	return mpParent;
}

void CCollider::Render() 
{
	glPushMatrix();
	//コライダの中心座標を計算
	//自分の座標×親の変換行列を掛ける
	CVector pos = mPosition * *mpMatrix;
	//中心座標へ移動
	glMultMatrixf(CMatrix().Translate(pos.X(), pos.Y(), pos.Z()).M());
	//DIFFUSE赤色設定
	float c[] = { 1.0f,0.0f,0.0f,1.0f };
	glMaterialfv(GL_FRONT, GL_DIFFUSE, c);
	//球描画
	glutWireSphere(mRadius, 16, 16);
	glPopMatrix();
}
CCollider::~CCollider() {
	//コリジョンリストから削除
	CCollisionManager::Get()->Remove(this);

}